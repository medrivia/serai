name: Release

on:
  # release:
  #   types: [published]
  workflow_dispatch:
    inputs:
      jsr:
        description: "Publish to JSR"
        type: boolean
        default: true
      npm:
        description: "Publish to NPM"
        type: boolean
        default: false
      pkg:
        description: "Package name"
        required: true
        type: choice
        options:
          - cli
          - core
          - serai
      tag:
        description: "NPM tag"
        default: "latest"
        type: choice
        options:
          - latest
          - next

run-name: >
  ${{ github.event_name == 'workflow_dispatch'
  && format('Publish {0} on {1}{2}', inputs.pkg, inputs.jsr && 'JSR ' || '', inputs.npm && 'NPM' || '')
  || github.workflow }}

jobs:
  jsr-release:
    if: ${{ inputs.jsr }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - name: Remove GitHub alerts from README.md for NPM/JSR
        run: sed -i -r '/^>\s+\[!\w+\]/d' ./README.md
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - run: bun i # install
        working-directory: packages/${{ inputs.pkg }}
      - name: "Remove publishConfig"
        working-directory: packages/${{ inputs.pkg }}
        run: |
          jq \
          'del(.publishConfig)' \
          package.json > package.json~
          mv package.json~ package.json
      - name: "Convert symlinks (one-level deep) in root directory"
        working-directory: packages/${{ inputs.pkg }}
        run: |
          for symlink in $(find . -maxdepth 1 -type l); do
          cp -f --remove-destination "$(realpath "$symlink")" "$symlink"
          done
      - name: Publish to JSR
        working-directory: packages/${{ inputs.pkg }}
        run: |
          jq \
          -s '.[0] * (.[1] | {version,license,exports})' \
          jsr.json package.json > jsr.json~
          mv jsr.json~ jsr.json
          bunx jsr publish --allow-dirty
  npm-release:
    if: ${{ github.event_name == 'release' || inputs.npm }}
    env:
      TAG: ${{ github.event.release.prerelease || (inputs.tag == 'next') && 'next' || 'latest' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - name: Remove GitHub alerts from README.md for NPM/JSR
        run: sed -i -r '/^>\s+\[!\w+\]/d' ./README.md
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
          registry-url: "https://registry.npmjs.org/"
          scope: "@serai"
      - run: bun i # install
        working-directory: packages/${{ inputs.pkg }}
      - run: bun --if-present b # build
        working-directory: packages/${{ inputs.pkg }}
      - name: "Use data from publishConfig"
        working-directory: packages/${{ inputs.pkg }}
        run: |
          jq \
          'reduce .publishConfig as $in (.; . + $in) | del(.publishConfig)' \
          package.json > package.json~
          mv package.json~ package.json
      - name: "Convert symlinks (one-level deep) in root directory"
        working-directory: packages/${{ inputs.pkg }}
        run: |
          for symlink in $(find . -maxdepth 1 -type l); do
          cp -f --remove-destination "$(realpath "$symlink")" "$symlink"
          done
      - uses: actions/setup-node@v4
        with:
          node-version: latest
          registry-url: "https://registry.npmjs.org/"
          scope: "@serai"
      - name: "Publish to NPM"
        working-directory: packages/${{ inputs.pkg }}
        run: npm publish --provenance --access public --tag $TAG
        env:
          NPM_CONFIG_TOKEN: ${{secrets.NPM_TOKEN}}
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
